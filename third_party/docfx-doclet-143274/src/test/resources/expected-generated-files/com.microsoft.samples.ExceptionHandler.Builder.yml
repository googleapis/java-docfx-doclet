### YamlMime:ManagedReference
items:
- uid: "com.microsoft.samples.ExceptionHandler.Builder"
  id: "Builder"
  parent: "com.microsoft.samples"
  children:
  - "com.microsoft.samples.ExceptionHandler.Builder.abortOn(java.lang.Class<? extends java.lang.Exception>...)"
  - "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors(com.microsoft.samples.ExceptionHandler.Interceptor...)"
  - "com.microsoft.samples.ExceptionHandler.Builder.build()"
  - "com.microsoft.samples.ExceptionHandler.Builder.retryOn(java.lang.Class<? extends java.lang.Exception>...)"
  langs:
  - "java"
  name: "ExceptionHandler.Builder"
  nameWithType: "ExceptionHandler.Builder"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder"
  type: "Class"
  package: "com.microsoft.samples"
  summary: "ExceptionHandler builder."
  syntax:
    content: "public static class ExceptionHandler.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.Builder()"
  id: "Builder()"
  parent: "com.microsoft.samples.ExceptionHandler.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "ExceptionHandler.Builder.Builder()"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.Builder()"
  overload: "com.microsoft.samples.ExceptionHandler.Builder.Builder*"
  type: "Constructor"
  package: "com.microsoft.samples"
  syntax:
    content: "private Builder()"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.abortOn(java.lang.Class<? extends java.lang.Exception>...)"
  id: "abortOn(java.lang.Class<? extends java.lang.Exception>...)"
  parent: "com.microsoft.samples.ExceptionHandler.Builder"
  langs:
  - "java"
  name: "abortOn(Class<? extends Exception>[] exceptions)"
  nameWithType: "ExceptionHandler.Builder.abortOn(Class<? extends Exception>[] exceptions)"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.abortOn(Class<? extends Exception>[] exceptions)"
  overload: "com.microsoft.samples.ExceptionHandler.Builder.abortOn*"
  type: "Method"
  package: "com.microsoft.samples"
  summary: "Adds the exceptions to abort on."
  syntax:
    content: "public final ExceptionHandler.Builder abortOn(Class<? extends Exception>[] exceptions)"
    parameters:
    - id: "exceptions"
      type: "java.lang.Class<? extends java.lang.Exception>[]"
      description: "retry should abort when such exceptions are thrown"
    return:
      type: "com.microsoft.samples.ExceptionHandler.Builder"
      description: "the Builder for chaining"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors(com.microsoft.samples.ExceptionHandler.Interceptor...)"
  id: "addInterceptors(com.microsoft.samples.ExceptionHandler.Interceptor...)"
  parent: "com.microsoft.samples.ExceptionHandler.Builder"
  langs:
  - "java"
  name: "addInterceptors(ExceptionHandler.Interceptor[] interceptors)"
  nameWithType: "ExceptionHandler.Builder.addInterceptors(ExceptionHandler.Interceptor[] interceptors)"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors(ExceptionHandler.Interceptor[] interceptors)"
  overload: "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors*"
  type: "Method"
  package: "com.microsoft.samples"
  summary: "Adds the exception handler interceptors. Call order will be maintained."
  syntax:
    content: "public ExceptionHandler.Builder addInterceptors(ExceptionHandler.Interceptor[] interceptors)"
    parameters:
    - id: "interceptors"
      type: "com.microsoft.samples.ExceptionHandler.Interceptor[]"
      description: "the interceptors for this exception handler"
    return:
      type: "com.microsoft.samples.ExceptionHandler.Builder"
      description: "the Builder for chaining"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.build()"
  id: "build()"
  parent: "com.microsoft.samples.ExceptionHandler.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "ExceptionHandler.Builder.build()"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.build()"
  overload: "com.microsoft.samples.ExceptionHandler.Builder.build*"
  type: "Method"
  package: "com.microsoft.samples"
  summary: "Returns a new ExceptionHandler instance."
  syntax:
    content: "public ExceptionHandler build()"
    return:
      type: "com.microsoft.samples.ExceptionHandler"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.retryOn(java.lang.Class<? extends java.lang.Exception>...)"
  id: "retryOn(java.lang.Class<? extends java.lang.Exception>...)"
  parent: "com.microsoft.samples.ExceptionHandler.Builder"
  langs:
  - "java"
  name: "retryOn(Class<? extends Exception>[] exceptions)"
  nameWithType: "ExceptionHandler.Builder.retryOn(Class<? extends Exception>[] exceptions)"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.retryOn(Class<? extends Exception>[] exceptions)"
  overload: "com.microsoft.samples.ExceptionHandler.Builder.retryOn*"
  type: "Method"
  package: "com.microsoft.samples"
  summary: "Add the exceptions to ignore/retry-on."
  syntax:
    content: "public final ExceptionHandler.Builder retryOn(Class<? extends Exception>[] exceptions)"
    parameters:
    - id: "exceptions"
      type: "java.lang.Class<? extends java.lang.Exception>[]"
      description: "retry should continue when such exceptions are thrown"
    return:
      type: "com.microsoft.samples.ExceptionHandler.Builder"
      description: "the Builder for chaining"
references:
- uid: "com.microsoft.samples.ExceptionHandler.Builder.Builder*"
  name: "Builder"
  nameWithType: "ExceptionHandler.Builder.Builder"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.Builder"
  package: "com.microsoft.samples"
- uid: "com.microsoft.samples.ExceptionHandler.Interceptor[]"
  spec.java:
  - uid: "com.microsoft.samples.ExceptionHandler.Interceptor"
    name: "Interceptor"
    fullName: "com.microsoft.samples.ExceptionHandler.Interceptor"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors*"
  name: "addInterceptors"
  nameWithType: "ExceptionHandler.Builder.addInterceptors"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.addInterceptors"
  package: "com.microsoft.samples"
- uid: "java.lang.Class<? extends java.lang.Exception>[]"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Class<? extends java/lang/Exception>[].html"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends java.lang.Exception"
    name: "Exception"
    fullName: "? extends java.lang.Exception"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.microsoft.samples.ExceptionHandler.Builder.retryOn*"
  name: "retryOn"
  nameWithType: "ExceptionHandler.Builder.retryOn"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.retryOn"
  package: "com.microsoft.samples"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.abortOn*"
  name: "abortOn"
  nameWithType: "ExceptionHandler.Builder.abortOn"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.abortOn"
  package: "com.microsoft.samples"
- uid: "com.microsoft.samples.ExceptionHandler"
  name: "ExceptionHandler"
  nameWithType: "ExceptionHandler"
  fullName: "com.microsoft.samples.ExceptionHandler"
- uid: "com.microsoft.samples.ExceptionHandler.Builder.build*"
  name: "build"
  nameWithType: "ExceptionHandler.Builder.build"
  fullName: "com.microsoft.samples.ExceptionHandler.Builder.build"
  package: "com.microsoft.samples"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "? extends java.lang.Exception>[]"
  name: "? extends Exception>[]"
  nameWithType: "? extends Exception>[]"
  fullName: "? extends java.lang.Exception>[]"
